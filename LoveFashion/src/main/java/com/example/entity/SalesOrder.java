package com.example.entity;
// Generated Jan 4, 2016 1:12:11 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SalesOrder generated by hbm2java
 */
@Entity
@Table(name = "sales_order", catalog = "lovefashion1")
public class SalesOrder implements java.io.Serializable {

	private String entityId;
	private CustomerEntity customerEntity;
	private Store store;
	private String status;
	private String couponCode;
	private String customerEmail;
	private String customerFirstname;
	private String customerLastname;
	private Double totalWeight;
	private Double discountAmount;
	private Double discountCanceled;
	private Double discountInvoiced;
	private Double discountRefunded;
	private Double grandTotal;
	private Double shippingAmount;
	private Double shippingCanceled;
	private Double shippingInvoiced;
	private Double shippingRefunded;
	private Double subtotal;
	private Double subtotalCanceled;
	private Double subtotalInvoiced;
	private Double subtotalRefunded;
	private Double taxAmount;
	private Double taxCanceled;
	private Double taxInvoiced;
	private Double taxRefunded;
	private Double totalCanceled;
	private Double totalInvoiced;
	private Double totalOfflineRefunded;
	private Double totalOnlineRefunded;
	private Double totalPaid;
	private Double totalQtyOrdered;
	private Double totalRefunded;
	private Integer billingAddressId;
	private Integer shippingAddressId;
	private String shippingMethod;
	private Date createdAt;
	private Date updatedAt;
	private short totalItemCount;
	private Double taxPercent;
	private Integer trackingNumbers;
	private Set<SalesOrderItem> salesOrderItems = new HashSet<SalesOrderItem>(0);
	private Set<SalesPaymentTransaction> salesPaymentTransactions = new HashSet<SalesPaymentTransaction>(0);
	private Set<SalesOrderAddress> salesOrderAddresses = new HashSet<SalesOrderAddress>(0);
	private Set<SalesShipment> salesShipments = new HashSet<SalesShipment>(0);
	private Set<SalesOrderPayment> salesOrderPayments = new HashSet<SalesOrderPayment>(0);
	private Set<SalesInvoice> salesInvoices = new HashSet<SalesInvoice>(0);
	private Set<SalesCreditmemo> salesCreditmemos = new HashSet<SalesCreditmemo>(0);
	private Set<SalesOrderStatusHistory> salesOrderStatusHistories = new HashSet<SalesOrderStatusHistory>(0);

	public SalesOrder() {
	}

	public SalesOrder(String entityId, short totalItemCount) {
		this.entityId = entityId;
		this.totalItemCount = totalItemCount;
	}

	public SalesOrder(String entityId, CustomerEntity customerEntity, Store store, String status, String couponCode,
			String customerEmail, String customerFirstname, String customerLastname, Double totalWeight,
			Double discountAmount, Double discountCanceled, Double discountInvoiced, Double discountRefunded,
			Double grandTotal, Double shippingAmount, Double shippingCanceled, Double shippingInvoiced,
			Double shippingRefunded, Double subtotal, Double subtotalCanceled, Double subtotalInvoiced,
			Double subtotalRefunded, Double taxAmount, Double taxCanceled, Double taxInvoiced, Double taxRefunded,
			Double totalCanceled, Double totalInvoiced, Double totalOfflineRefunded, Double totalOnlineRefunded,
			Double totalPaid, Double totalQtyOrdered, Double totalRefunded, Integer billingAddressId,
			Integer shippingAddressId, String shippingMethod, Date createdAt, Date updatedAt, short totalItemCount,
			Double taxPercent, Integer trackingNumbers, Set<SalesOrderItem> salesOrderItems,
			Set<SalesPaymentTransaction> salesPaymentTransactions, Set<SalesOrderAddress> salesOrderAddresses,
			Set<SalesShipment> salesShipments, Set<SalesOrderPayment> salesOrderPayments,
			Set<SalesInvoice> salesInvoices, Set<SalesCreditmemo> salesCreditmemos,
			Set<SalesOrderStatusHistory> salesOrderStatusHistories) {
		this.entityId = entityId;
		this.customerEntity = customerEntity;
		this.store = store;
		this.status = status;
		this.couponCode = couponCode;
		this.customerEmail = customerEmail;
		this.customerFirstname = customerFirstname;
		this.customerLastname = customerLastname;
		this.totalWeight = totalWeight;
		this.discountAmount = discountAmount;
		this.discountCanceled = discountCanceled;
		this.discountInvoiced = discountInvoiced;
		this.discountRefunded = discountRefunded;
		this.grandTotal = grandTotal;
		this.shippingAmount = shippingAmount;
		this.shippingCanceled = shippingCanceled;
		this.shippingInvoiced = shippingInvoiced;
		this.shippingRefunded = shippingRefunded;
		this.subtotal = subtotal;
		this.subtotalCanceled = subtotalCanceled;
		this.subtotalInvoiced = subtotalInvoiced;
		this.subtotalRefunded = subtotalRefunded;
		this.taxAmount = taxAmount;
		this.taxCanceled = taxCanceled;
		this.taxInvoiced = taxInvoiced;
		this.taxRefunded = taxRefunded;
		this.totalCanceled = totalCanceled;
		this.totalInvoiced = totalInvoiced;
		this.totalOfflineRefunded = totalOfflineRefunded;
		this.totalOnlineRefunded = totalOnlineRefunded;
		this.totalPaid = totalPaid;
		this.totalQtyOrdered = totalQtyOrdered;
		this.totalRefunded = totalRefunded;
		this.billingAddressId = billingAddressId;
		this.shippingAddressId = shippingAddressId;
		this.shippingMethod = shippingMethod;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.totalItemCount = totalItemCount;
		this.taxPercent = taxPercent;
		this.trackingNumbers = trackingNumbers;
		this.salesOrderItems = salesOrderItems;
		this.salesPaymentTransactions = salesPaymentTransactions;
		this.salesOrderAddresses = salesOrderAddresses;
		this.salesShipments = salesShipments;
		this.salesOrderPayments = salesOrderPayments;
		this.salesInvoices = salesInvoices;
		this.salesCreditmemos = salesCreditmemos;
		this.salesOrderStatusHistories = salesOrderStatusHistories;
	}

	@Id

	@Column(name = "entity_id", unique = true, nullable = false, length = 60)
	public String getEntityId() {
		return this.entityId;
	}

	public void setEntityId(String entityId) {
		this.entityId = entityId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_id")
	public CustomerEntity getCustomerEntity() {
		return this.customerEntity;
	}

	public void setCustomerEntity(CustomerEntity customerEntity) {
		this.customerEntity = customerEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "store_id")
	public Store getStore() {
		return this.store;
	}

	public void setStore(Store store) {
		this.store = store;
	}

	@Column(name = "status", length = 32)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "coupon_code")
	public String getCouponCode() {
		return this.couponCode;
	}

	public void setCouponCode(String couponCode) {
		this.couponCode = couponCode;
	}

	@Column(name = "customer_email")
	public String getCustomerEmail() {
		return this.customerEmail;
	}

	public void setCustomerEmail(String customerEmail) {
		this.customerEmail = customerEmail;
	}

	@Column(name = "customer_firstname")
	public String getCustomerFirstname() {
		return this.customerFirstname;
	}

	public void setCustomerFirstname(String customerFirstname) {
		this.customerFirstname = customerFirstname;
	}

	@Column(name = "customer_lastname")
	public String getCustomerLastname() {
		return this.customerLastname;
	}

	public void setCustomerLastname(String customerLastname) {
		this.customerLastname = customerLastname;
	}

	@Column(name = "total_weight", precision = 22, scale = 0)
	public Double getTotalWeight() {
		return this.totalWeight;
	}

	public void setTotalWeight(Double totalWeight) {
		this.totalWeight = totalWeight;
	}

	@Column(name = "discount_amount", precision = 22, scale = 0)
	public Double getDiscountAmount() {
		return this.discountAmount;
	}

	public void setDiscountAmount(Double discountAmount) {
		this.discountAmount = discountAmount;
	}

	@Column(name = "discount_canceled", precision = 22, scale = 0)
	public Double getDiscountCanceled() {
		return this.discountCanceled;
	}

	public void setDiscountCanceled(Double discountCanceled) {
		this.discountCanceled = discountCanceled;
	}

	@Column(name = "discount_invoiced", precision = 22, scale = 0)
	public Double getDiscountInvoiced() {
		return this.discountInvoiced;
	}

	public void setDiscountInvoiced(Double discountInvoiced) {
		this.discountInvoiced = discountInvoiced;
	}

	@Column(name = "discount_refunded", precision = 22, scale = 0)
	public Double getDiscountRefunded() {
		return this.discountRefunded;
	}

	public void setDiscountRefunded(Double discountRefunded) {
		this.discountRefunded = discountRefunded;
	}

	@Column(name = "grand_total", precision = 22, scale = 0)
	public Double getGrandTotal() {
		return this.grandTotal;
	}

	public void setGrandTotal(Double grandTotal) {
		this.grandTotal = grandTotal;
	}

	@Column(name = "shipping_amount", precision = 22, scale = 0)
	public Double getShippingAmount() {
		return this.shippingAmount;
	}

	public void setShippingAmount(Double shippingAmount) {
		this.shippingAmount = shippingAmount;
	}

	@Column(name = "shipping_canceled", precision = 22, scale = 0)
	public Double getShippingCanceled() {
		return this.shippingCanceled;
	}

	public void setShippingCanceled(Double shippingCanceled) {
		this.shippingCanceled = shippingCanceled;
	}

	@Column(name = "shipping_invoiced", precision = 22, scale = 0)
	public Double getShippingInvoiced() {
		return this.shippingInvoiced;
	}

	public void setShippingInvoiced(Double shippingInvoiced) {
		this.shippingInvoiced = shippingInvoiced;
	}

	@Column(name = "shipping_refunded", precision = 22, scale = 0)
	public Double getShippingRefunded() {
		return this.shippingRefunded;
	}

	public void setShippingRefunded(Double shippingRefunded) {
		this.shippingRefunded = shippingRefunded;
	}

	@Column(name = "subtotal", precision = 22, scale = 0)
	public Double getSubtotal() {
		return this.subtotal;
	}

	public void setSubtotal(Double subtotal) {
		this.subtotal = subtotal;
	}

	@Column(name = "subtotal_canceled", precision = 22, scale = 0)
	public Double getSubtotalCanceled() {
		return this.subtotalCanceled;
	}

	public void setSubtotalCanceled(Double subtotalCanceled) {
		this.subtotalCanceled = subtotalCanceled;
	}

	@Column(name = "subtotal_invoiced", precision = 22, scale = 0)
	public Double getSubtotalInvoiced() {
		return this.subtotalInvoiced;
	}

	public void setSubtotalInvoiced(Double subtotalInvoiced) {
		this.subtotalInvoiced = subtotalInvoiced;
	}

	@Column(name = "subtotal_refunded", precision = 22, scale = 0)
	public Double getSubtotalRefunded() {
		return this.subtotalRefunded;
	}

	public void setSubtotalRefunded(Double subtotalRefunded) {
		this.subtotalRefunded = subtotalRefunded;
	}

	@Column(name = "tax_amount", precision = 22, scale = 0)
	public Double getTaxAmount() {
		return this.taxAmount;
	}

	public void setTaxAmount(Double taxAmount) {
		this.taxAmount = taxAmount;
	}

	@Column(name = "tax_canceled", precision = 22, scale = 0)
	public Double getTaxCanceled() {
		return this.taxCanceled;
	}

	public void setTaxCanceled(Double taxCanceled) {
		this.taxCanceled = taxCanceled;
	}

	@Column(name = "tax_invoiced", precision = 22, scale = 0)
	public Double getTaxInvoiced() {
		return this.taxInvoiced;
	}

	public void setTaxInvoiced(Double taxInvoiced) {
		this.taxInvoiced = taxInvoiced;
	}

	@Column(name = "tax_refunded", precision = 22, scale = 0)
	public Double getTaxRefunded() {
		return this.taxRefunded;
	}

	public void setTaxRefunded(Double taxRefunded) {
		this.taxRefunded = taxRefunded;
	}

	@Column(name = "total_canceled", precision = 22, scale = 0)
	public Double getTotalCanceled() {
		return this.totalCanceled;
	}

	public void setTotalCanceled(Double totalCanceled) {
		this.totalCanceled = totalCanceled;
	}

	@Column(name = "total_invoiced", precision = 22, scale = 0)
	public Double getTotalInvoiced() {
		return this.totalInvoiced;
	}

	public void setTotalInvoiced(Double totalInvoiced) {
		this.totalInvoiced = totalInvoiced;
	}

	@Column(name = "total_offline_refunded", precision = 22, scale = 0)
	public Double getTotalOfflineRefunded() {
		return this.totalOfflineRefunded;
	}

	public void setTotalOfflineRefunded(Double totalOfflineRefunded) {
		this.totalOfflineRefunded = totalOfflineRefunded;
	}

	@Column(name = "total_online_refunded", precision = 22, scale = 0)
	public Double getTotalOnlineRefunded() {
		return this.totalOnlineRefunded;
	}

	public void setTotalOnlineRefunded(Double totalOnlineRefunded) {
		this.totalOnlineRefunded = totalOnlineRefunded;
	}

	@Column(name = "total_paid", precision = 22, scale = 0)
	public Double getTotalPaid() {
		return this.totalPaid;
	}

	public void setTotalPaid(Double totalPaid) {
		this.totalPaid = totalPaid;
	}

	@Column(name = "total_qty_ordered", precision = 22, scale = 0)
	public Double getTotalQtyOrdered() {
		return this.totalQtyOrdered;
	}

	public void setTotalQtyOrdered(Double totalQtyOrdered) {
		this.totalQtyOrdered = totalQtyOrdered;
	}

	@Column(name = "total_refunded", precision = 22, scale = 0)
	public Double getTotalRefunded() {
		return this.totalRefunded;
	}

	public void setTotalRefunded(Double totalRefunded) {
		this.totalRefunded = totalRefunded;
	}

	@Column(name = "billing_address_id")
	public Integer getBillingAddressId() {
		return this.billingAddressId;
	}

	public void setBillingAddressId(Integer billingAddressId) {
		this.billingAddressId = billingAddressId;
	}

	@Column(name = "shipping_address_id")
	public Integer getShippingAddressId() {
		return this.shippingAddressId;
	}

	public void setShippingAddressId(Integer shippingAddressId) {
		this.shippingAddressId = shippingAddressId;
	}

	@Column(name = "shipping_method")
	public String getShippingMethod() {
		return this.shippingMethod;
	}

	public void setShippingMethod(String shippingMethod) {
		this.shippingMethod = shippingMethod;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "total_item_count", nullable = false)
	public short getTotalItemCount() {
		return this.totalItemCount;
	}

	public void setTotalItemCount(short totalItemCount) {
		this.totalItemCount = totalItemCount;
	}

	@Column(name = "tax_percent", precision = 22, scale = 0)
	public Double getTaxPercent() {
		return this.taxPercent;
	}

	public void setTaxPercent(Double taxPercent) {
		this.taxPercent = taxPercent;
	}

	@Column(name = "tracking_numbers")
	public Integer getTrackingNumbers() {
		return this.trackingNumbers;
	}

	public void setTrackingNumbers(Integer trackingNumbers) {
		this.trackingNumbers = trackingNumbers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesOrderItem> getSalesOrderItems() {
		return this.salesOrderItems;
	}

	public void setSalesOrderItems(Set<SalesOrderItem> salesOrderItems) {
		this.salesOrderItems = salesOrderItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesPaymentTransaction> getSalesPaymentTransactions() {
		return this.salesPaymentTransactions;
	}

	public void setSalesPaymentTransactions(Set<SalesPaymentTransaction> salesPaymentTransactions) {
		this.salesPaymentTransactions = salesPaymentTransactions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesOrderAddress> getSalesOrderAddresses() {
		return this.salesOrderAddresses;
	}

	public void setSalesOrderAddresses(Set<SalesOrderAddress> salesOrderAddresses) {
		this.salesOrderAddresses = salesOrderAddresses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesShipment> getSalesShipments() {
		return this.salesShipments;
	}

	public void setSalesShipments(Set<SalesShipment> salesShipments) {
		this.salesShipments = salesShipments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesOrderPayment> getSalesOrderPayments() {
		return this.salesOrderPayments;
	}

	public void setSalesOrderPayments(Set<SalesOrderPayment> salesOrderPayments) {
		this.salesOrderPayments = salesOrderPayments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesInvoice> getSalesInvoices() {
		return this.salesInvoices;
	}

	public void setSalesInvoices(Set<SalesInvoice> salesInvoices) {
		this.salesInvoices = salesInvoices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesCreditmemo> getSalesCreditmemos() {
		return this.salesCreditmemos;
	}

	public void setSalesCreditmemos(Set<SalesCreditmemo> salesCreditmemos) {
		this.salesCreditmemos = salesCreditmemos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrder")
	public Set<SalesOrderStatusHistory> getSalesOrderStatusHistories() {
		return this.salesOrderStatusHistories;
	}

	public void setSalesOrderStatusHistories(Set<SalesOrderStatusHistory> salesOrderStatusHistories) {
		this.salesOrderStatusHistories = salesOrderStatusHistories;
	}

}
