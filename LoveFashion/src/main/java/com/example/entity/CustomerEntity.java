package com.example.entity;
// Generated Jan 4, 2016 1:12:11 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CustomerEntity generated by hbm2java
 */
@Entity
@Table(name = "customer_entity", catalog = "lovefashion1")
public class CustomerEntity implements java.io.Serializable {

	private Integer entityId;
	private CustomerGroup customerGroup;
	private String firstname;
	private String lastname;
	private Short gender;
	private String email;
	private String password;
	private Integer score;
	private Date createdAt;
	private Date updatedAt;
	private short isActive;
	private Date logdate;
	private short lognum;
	private Integer defaultBilling;
	private Integer defaultShipping;
	private Set<SalesruleCustomer> salesruleCustomers = new HashSet<SalesruleCustomer>(0);
	private Set<VerificationToken> verificationTokens = new HashSet<VerificationToken>(0);
	private Set<CustomerAddressEntity> customerAddressEntities = new HashSet<CustomerAddressEntity>(0);
	private Set<Wishlist> wishlists = new HashSet<Wishlist>(0);
	private Set<SalesruleCouponUsage> salesruleCouponUsages = new HashSet<SalesruleCouponUsage>(0);
	private Set<CustomerBestbuyAggregatedYearly> customerBestbuyAggregatedYearlies = new HashSet<CustomerBestbuyAggregatedYearly>(
			0);
	private Set<CustomerBestbuyAggregatedDaily> customerBestbuyAggregatedDailies = new HashSet<CustomerBestbuyAggregatedDaily>(
			0);
	private Set<SalesOrder> salesOrders = new HashSet<SalesOrder>(0);
	private Set<CustomerBestbuyAggregatedMonthly> customerBestbuyAggregatedMonthlies = new HashSet<CustomerBestbuyAggregatedMonthly>(
			0);

	public CustomerEntity() {
	}

	public CustomerEntity(CustomerGroup customerGroup, Date createdAt, Date updatedAt, short isActive, short lognum) {
		this.customerGroup = customerGroup;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.isActive = isActive;
		this.lognum = lognum;
	}

	public CustomerEntity(CustomerGroup customerGroup, String firstname, String lastname, Short gender, String email,
			String password, Integer score, Date createdAt, Date updatedAt, short isActive, Date logdate, short lognum,
			Integer defaultBilling, Integer defaultShipping, Set<SalesruleCustomer> salesruleCustomers,
			Set<VerificationToken> verificationTokens, Set<CustomerAddressEntity> customerAddressEntities,
			Set<Wishlist> wishlists, Set<SalesruleCouponUsage> salesruleCouponUsages,
			Set<CustomerBestbuyAggregatedYearly> customerBestbuyAggregatedYearlies,
			Set<CustomerBestbuyAggregatedDaily> customerBestbuyAggregatedDailies, Set<SalesOrder> salesOrders,
			Set<CustomerBestbuyAggregatedMonthly> customerBestbuyAggregatedMonthlies) {
		this.customerGroup = customerGroup;
		this.firstname = firstname;
		this.lastname = lastname;
		this.gender = gender;
		this.email = email;
		this.password = password;
		this.score = score;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.isActive = isActive;
		this.logdate = logdate;
		this.lognum = lognum;
		this.defaultBilling = defaultBilling;
		this.defaultShipping = defaultShipping;
		this.salesruleCustomers = salesruleCustomers;
		this.verificationTokens = verificationTokens;
		this.customerAddressEntities = customerAddressEntities;
		this.wishlists = wishlists;
		this.salesruleCouponUsages = salesruleCouponUsages;
		this.customerBestbuyAggregatedYearlies = customerBestbuyAggregatedYearlies;
		this.customerBestbuyAggregatedDailies = customerBestbuyAggregatedDailies;
		this.salesOrders = salesOrders;
		this.customerBestbuyAggregatedMonthlies = customerBestbuyAggregatedMonthlies;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "entity_id", unique = true, nullable = false)
	public Integer getEntityId() {
		return this.entityId;
	}

	public void setEntityId(Integer entityId) {
		this.entityId = entityId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "group_id", nullable = false)
	public CustomerGroup getCustomerGroup() {
		return this.customerGroup;
	}

	public void setCustomerGroup(CustomerGroup customerGroup) {
		this.customerGroup = customerGroup;
	}

	@Column(name = "firstname", length = 32)
	public String getFirstname() {
		return this.firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	@Column(name = "lastname", length = 32)
	public String getLastname() {
		return this.lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	@Column(name = "gender")
	public Short getGender() {
		return this.gender;
	}

	public void setGender(Short gender) {
		this.gender = gender;
	}

	@Column(name = "email", length = 128)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", length = 60)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "score")
	public Integer getScore() {
		return this.score;
	}

	public void setScore(Integer score) {
		this.score = score;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "is_active", nullable = false)
	public short getIsActive() {
		return this.isActive;
	}

	public void setIsActive(short isActive) {
		this.isActive = isActive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "logdate", length = 19)
	public Date getLogdate() {
		return this.logdate;
	}

	public void setLogdate(Date logdate) {
		this.logdate = logdate;
	}

	@Column(name = "lognum", nullable = false)
	public short getLognum() {
		return this.lognum;
	}

	public void setLognum(short lognum) {
		this.lognum = lognum;
	}

	@Column(name = "default_billing")
	public Integer getDefaultBilling() {
		return this.defaultBilling;
	}

	public void setDefaultBilling(Integer defaultBilling) {
		this.defaultBilling = defaultBilling;
	}

	@Column(name = "default_shipping")
	public Integer getDefaultShipping() {
		return this.defaultShipping;
	}

	public void setDefaultShipping(Integer defaultShipping) {
		this.defaultShipping = defaultShipping;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerEntity")
	public Set<SalesruleCustomer> getSalesruleCustomers() {
		return this.salesruleCustomers;
	}

	public void setSalesruleCustomers(Set<SalesruleCustomer> salesruleCustomers) {
		this.salesruleCustomers = salesruleCustomers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerEntity")
	public Set<VerificationToken> getVerificationTokens() {
		return this.verificationTokens;
	}

	public void setVerificationTokens(Set<VerificationToken> verificationTokens) {
		this.verificationTokens = verificationTokens;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerEntity")
	public Set<CustomerAddressEntity> getCustomerAddressEntities() {
		return this.customerAddressEntities;
	}

	public void setCustomerAddressEntities(Set<CustomerAddressEntity> customerAddressEntities) {
		this.customerAddressEntities = customerAddressEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerEntity")
	public Set<Wishlist> getWishlists() {
		return this.wishlists;
	}

	public void setWishlists(Set<Wishlist> wishlists) {
		this.wishlists = wishlists;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerEntity")
	public Set<SalesruleCouponUsage> getSalesruleCouponUsages() {
		return this.salesruleCouponUsages;
	}

	public void setSalesruleCouponUsages(Set<SalesruleCouponUsage> salesruleCouponUsages) {
		this.salesruleCouponUsages = salesruleCouponUsages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerEntity")
	public Set<CustomerBestbuyAggregatedYearly> getCustomerBestbuyAggregatedYearlies() {
		return this.customerBestbuyAggregatedYearlies;
	}

	public void setCustomerBestbuyAggregatedYearlies(
			Set<CustomerBestbuyAggregatedYearly> customerBestbuyAggregatedYearlies) {
		this.customerBestbuyAggregatedYearlies = customerBestbuyAggregatedYearlies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerEntity")
	public Set<CustomerBestbuyAggregatedDaily> getCustomerBestbuyAggregatedDailies() {
		return this.customerBestbuyAggregatedDailies;
	}

	public void setCustomerBestbuyAggregatedDailies(
			Set<CustomerBestbuyAggregatedDaily> customerBestbuyAggregatedDailies) {
		this.customerBestbuyAggregatedDailies = customerBestbuyAggregatedDailies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerEntity")
	public Set<SalesOrder> getSalesOrders() {
		return this.salesOrders;
	}

	public void setSalesOrders(Set<SalesOrder> salesOrders) {
		this.salesOrders = salesOrders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customerEntity")
	public Set<CustomerBestbuyAggregatedMonthly> getCustomerBestbuyAggregatedMonthlies() {
		return this.customerBestbuyAggregatedMonthlies;
	}

	public void setCustomerBestbuyAggregatedMonthlies(
			Set<CustomerBestbuyAggregatedMonthly> customerBestbuyAggregatedMonthlies) {
		this.customerBestbuyAggregatedMonthlies = customerBestbuyAggregatedMonthlies;
	}

}
